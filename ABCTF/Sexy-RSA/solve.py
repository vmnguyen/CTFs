#!/usr/bin/env python2
# Look at: https://www.wikiwand.com/en/RSA_(cryptosystem)

import gmpy2

p = 1099610570827941329700237866432657027914359798062896153406865588143725813368448278118977438921370935678732434831141304899886705498243884638860011461262640420256594271701812607875254999146529955445651530660964259381322198377196122399
q = 1099610570827941329700237866432657027914359798062896153406865588143725813368448278118977438921370935678732434831141304899886705498243884638860011461262640420256594271701812607875254999146529955445651530660964259381322198377196122393

# x is unknown

def generate_key(bitlength):
	temp = gmpy2.next_prime(2**bitlength)

	for i in range(x):
		temp = gmpy2.next_prime(temp)

	p = gmpy2.next_prime(temp)			# look at this line
	q = gmpy2.next_prime(p)				# and that!! 
	return p,q 



e = 65537
n = p*q 
phi = (p-1)*(q-1)
d = gmpy2.powmod(e,-1, phi)

assert d*e % phi == 1

print 'Public Key = ', n 
print 'Exponent = ', e 
print 'Sum p+q = ', p+q 

def encrypt(message):
	message = int(message.encode('hex'),16)
	cipher = gmpy2.powmod(message, e, n)
	print 'cipher = ', cipher
	return cipher

def decrypt(cipher, d):
	temp = gmpy2.powmod(cipher, d, n)
	print temp,'temp'
	message = hex(temp).lstrip('0x')
	print 'message = ', message
	return message.decode('hex')
Publickey = "c20a1d8b3903e1864d14a4d1f32ce57e4665fc5683960d2f7c0f30d5d247f5fa264fa66b49e801943ab68be3d9a4b393ae22963888bf145f07101616e62e0db2b04644524516c966d8923acf12af049a1d9d6fe3e786763613ee9b8f541291dcf8f0ac9dccc5d47565ef332d466bc80dc5763f1b1139f14d3c0bae072725815f"
Message = "29846947519214575162497413725060412546119233216851184246267357770082463030225"
cipher =  293430917376708381243824815247228063605104303548720758108780880727974339086036691092136736806182713047603694090694712685069524383098129303183298249981051498714383399595430658107400768559066065231114145553134453396428041946588586604081230659780431638898871362957635105901091871385165354213544323931410599944377781013715195511539451275610913318909140275602013631077670399937733517949344579963174235423101450272762052806595645694091546721802246723616268373048438591

print decrypt(cipher,d)
